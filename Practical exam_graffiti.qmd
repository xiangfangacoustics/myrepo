---
title: "Practical exam_graffiti"
format: html
editor: visual
---

## Installing packages

```{r}
library(tidyverse)
library(tmap)
library(rgdal)
library(broom)
library(mapview)
library(crosstalk)
library(sf)
library(sp)
library(spdep)
library(car)
library(fs)
library(janitor)
library(here)
```

## Read and clean the datasets

```{r}
shape <- st_read("/Users/xfang/Desktop/UCL PHD/PGTA/CASA GIS/Week8/Census 2020_ Tracts for San Francisco_20241203/geo_export_1b8233d2-9dd6-4cdf-a4e9-7f70738f1d29.shp") %>%
  st_transform(., crs=7131)

graffiti <- read_csv("/Users/xfang/Desktop/UCL PHD/PGTA/CASA GIS/Week8/Graffiti_20241203.csv")

graffiti2<-graffiti%>%
  separate(., Point, c("latitude", "longitude"), sep = ",")

# parse makes a string containing a number into a number  
graffiti2$latitude<-parse_number(graffiti2$latitude) ## leading $ and grouping character , ignored
graffiti2$longitude<-parse_number(graffiti2$longitude) ## leading $ and grouping character , ignored

graffiti3<- graffiti2%>%
  # if i don't remove NAs or 0 it may cause an error - remember last week
  filter(latitude !=	0 )%>%
  filter(longitude != 0)%>%
  st_as_sf(., coords = c("longitude", "latitude"), 
                   crs = 4326)

graffiti4<- graffiti3%>%
filter(str_detect(Closed, "2019"))%>%
  #filter(str_detect(`Request Type`, "Building"))%>%
  st_transform(., crs=7131)

# spatial subset points within the san fran polygon (sf object)

graffiti_within <- graffiti4[shape, ,op=st_intersects]

tmap_mode("plot")
tm_shape(shape) +
  tm_polygons(col = NA, alpha = 0.5) +
tm_shape(graffiti4) +
  tm_dots(col = "blue")

```

### Density of points per spatial unit

```{r}
# the word predicate in the output means to meet a relationship (e.g. intersecting)
intersectexample <- st_intersects(shape, graffiti4)

# this is very similar to spatial join st_join(shape, graffiti4, op=st_intersects)
intersectionexample <- st_intersection(shape, graffiti4)

# why are there 5 extra points here? because 5 points don't intersect the shape!!
joinexample<-st_join(graffiti4, shape, join=st_intersects)

tmap_mode("plot")
tm_shape(intersectionexample) +
  tm_dots(col = NA, alpha = 0.5)
#####################

points_sf_joined<-shape%>%
  mutate(n = lengths(st_intersects(., graffiti4)))%>%
  janitor::clean_names()%>%
    #calculate area
    mutate(area=st_area(.))%>%
    #then density of the points per ward
    mutate(density=n/area)
```

### Read census data

```{r}
census_health <- read_csv("/Users/xfang/Desktop/UCL PHD/PGTA/CASA GIS/Week8/ACSST1Y2022.S2701_2024-12-03T062630/ACSST1Y2022.S2701-Data.csv", skip=1)
 
 census_health2 <- census_health%>%
  clean_names()
```

### Join the data

```{r}
census_health3 <-census_health2 %>%
  select(geography, geographic_area_name, estimate_percent_insured_civilian_noninstitutionalized_population)%>%
  # 10 is where the geoid starts
  mutate(tract = str_sub(geography, start = 10, end=20))
points_sf_joined_join_health_insur <- points_sf_joined %>%
  left_join(., census_health3,
            by=c("geoid" = "tract"))
```

## Alternative option-tidycensus

```{r}
#Or we can use tidy census to read in the census data directly - no joining.
#Note, S2701_C03_031E is the estimate_percent_insured_civilian_noninstitutionalized_population, however it doesn't appear when i search for the data, this could be to differences in the API and the data online.

library(tidycensus)
options(tigris_use_cache = TRUE)

v20 <- load_variables(2020, "acs5")

View(v20)

census_SF <- get_acs(
  state = "CA",
  county = "San Francisco",
  geography = "tract",
  variables = c("B27001_001", "B27001_001"),
  geometry = TRUE,
  year = 2020
)%>%
    st_transform(., crs=7131)

head(census_SF)
```

## Join health data and shapefile

```{r}
join <- st_join(shape, census_SF, join=st_equals)
```

## Income data

```{r}
census_income <- read_csv("/Users/xfang/Desktop/UCL PHD/PGTA/CASA GIS/Week8/ACSST1Y2022.S2701_2024-12-03T062630/ACSST1Y2022.S1901_2024-12-03T070610/ACSST1Y2022.S1901-Data.csv", skip=1)
 
  
census_income2 <- census_income%>%
  clean_names()
 

census_income3 <-census_income2 %>%
  select(geography, geographic_area_name, estimate_households_mean_income_dollars, estimate_households_median_income_dollars, estimate_households_total)%>%
  mutate(tract = str_sub(geography, start = 10, end=20))
```

## Join again

```{r}
points_sf_joined_join_health_insur_income <- points_sf_joined_join_health_insur %>%
  left_join(., census_income3,
            by=c("geoid" = "tract"))

```
